#!/usr/bin/env python3
import subprocess
from IPython import embed
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns
from io import StringIO
#import matplotlib.cm as cm

PLACES = '''
      JUJUY         FORMOSA
    SALTA                             CHACO     MISIONES
    CATAMARCA TUCUMAN SANTIAGODELESTERO   CORRIENTES
    LARIOJA           CORDOBA         SANTAFE ENTRERIOS
    SANJUAN SANLUIS
    MENDOZA         LAPAMPA             PCIABSAS CABA
    NEUQUEN RIONEGRO
            CHUBUT
            SANTACRUZ
            TIERRADELFUEGO
    '''.split()


def plot_global(df):
    acumulado = df.reset_index().groupby(['index', 'case']).sum().unstack().fillna(0).cumsum()
    acumulado.columns = acumulado.columns.droplevel()
    sns.set()
    sns.set_context("talk")
    sns.lineplot(data=acumulado, markers=[".", ".", "."], dashes=False)

    fit = np.linspace(0, len(acumulado), len(acumulado))**2
    plt.plot(acumulado.index, fit, "--", color="lightgray")
    plt.annotate(r'$x^2$',  xy=(acumulado.index[17], 320), xycoords='data', xytext=(-50, -60), textcoords='offset points', arrowprops=dict(arrowstyle='->', color='black', connectionstyle="angle3,angleA=90,angleB=0"))

    fit = np.linspace(0, len(acumulado), len(acumulado))**3
    plt.plot(acumulado.index, fit, "--", color="lightgray")
    plt.annotate(r'$x^3$',  xy=(acumulado.index[6], 280), xycoords='data', xytext=(-50, -60), textcoords='offset points', arrowprops=dict(arrowstyle='->', color='black', connectionstyle="angle3,angleA=90,angleB=0"))

    plt.title("Coronavirus en Argentina", fontsize=18)  # for title
    plt.xlabel("Fecha", fontsize=14)
    plt.ylabel("Casos", fontsize=14)
    plt.ylim(0, df['CONFIRMADO'].max())
    plt.show()


def plot_daily_cases(df):
    news = df[df.case == 'CONFIRMADO'].reset_index().groupby(['index', 'place']).sum().unstack().fillna(0)
    news.columns = news.columns.droplevel()
    sns.set()
    sns.set_context("talk")
    chart = sns.lineplot(data=news, markers=['.']*30, dashes=False)
    chart.set_xticklabels(chart.get_xticklabels(), rotation=45, horizontalalignment='right')
    plt.show()


def make_df_from_md(md_path):
    print(f'Reading {md_path}')
    csv_bytes = subprocess.check_output(['./make_csv_from_md', md_path])
    df = pd.read_csv(StringIO(csv_bytes.decode()))
    date_index = pd.to_datetime(df[['year', 'month', 'day']].apply(lambda x: "-".join((map(str, x.values))),
                                                                   axis=1),
                                format="%Y-%m-%d")
    df = df.set_index(date_index)[['case', 'place', 'new']]
    return df
 

if __name__ == "__main__":

    df = make_df_from_md('COVID-19-ARGENTINA/argentina.md')

    # from IPython import embed; embed()

    # Lugares afectados:
    lugares_afectados = df.place.unique()
    lugares_afectados_geordenados = [p for p in PLACES if p in lugares_afectados]

    # Chequeo que no haya typos en los nombres de los lugares
    assert all(p in PLACES for p in lugares_afectados), lugares_afectados

    # DIARIO
    plot_daily_cases(df)

    # ACUMULADO
    plot_global(df)

    # GEOGRAFICO
    midpoint = (df.new.values.max() - df.new.values.min()) / 10
    heat = df[df.case == 'CONFIRMADO'].reset_index().groupby(['index', 'place'])['new'].max().unstack()
    heat.index = heat.index.strftime("%d-%m")

    # Transpongo para que quede el tiempo horizontal
    sns.heatmap(heat[lugares_afectados_geordenados].T,
                annot=True,
                cbar=False,
                cmap='coolwarm',
                center=midpoint,
                annot_kws={'size':10})

    plt.xlabel('Fecha')
    plt.ylabel("")
    plt.yticks(np.arange(0.5,21.5, 1), lugares_afectados_geordenados, fontsize=10)
    plt.xticks(rotation=45)
    plt.xticks(fontsize=10)
    plt.title("Confirmados por provincia")
    plt.show()
    #embed()
